#include "../../s21_decimal.h"

#suite s21_from_decimal_to_float

#test n_01
s21_decimal src1 = {{0}};
src1.bits[0] = 0b00000000000000000000000000000011;
src1.bits[1] = 0b00000000000000000000000000000000;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b00000000000000000000000000000000;
float value = 0;

s21_from_decimal_to_float(src1, &value);
ck_assert_float_eq_tol(3.0, value, 10e-5);

#test n_02
s21_decimal src1 = {{0}};
src1.bits[0] = 0b00000000000000000000000000000000;
src1.bits[1] = 0b00000000000000000000000000000000;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b00000000000000000000000000000000;
float value = 0;

s21_from_decimal_to_float(src1, &value);
ck_assert_float_eq_tol(0.0, value, 10e-5);

#test n_03
s21_decimal src1 = {{0}};
src1.bits[0] = 0b00000000000000000000000000000001;
src1.bits[1] = 0b00000000000000000000000000000000;
src1.bits[2] = 0b00000000000000000000000000000000;
src1.bits[3] = 0b00000000000000000000000000000000;
float value = 0;
s21_from_decimal_to_float(src1, &value);
ck_assert_float_eq_tol(1.0, value, 10e-5);


#test n_04
s21_decimal value = {{0xFFFFFF, 0, 0, 0}};
float result = 0;
float check = 16777215;
int return_value = s21_from_decimal_to_float(value, &result);
ck_assert_float_eq(result, check);
ck_assert_int_eq(return_value, 0);


#test n_05
s21_decimal value = {{0xFFFFFFFF, 0xFFFFFFFF, 0, 0}};
float result = 0;
float check = 0xFFFFFFFFFFFFFFFF;
int return_value = s21_from_decimal_to_float(value, &result);
ck_assert_float_eq(result, check);
ck_assert_int_eq(return_value, 0);

#test n_06
s21_decimal src = {0};
int result = 0;
float number = 0.0;
src.bits[0] = 23450987;
src.bits[1] = 0;
src.bits[2] = 0;
src.bits[3] = 2147745792;
result = s21_from_decimal_to_float(src, &number);
ck_assert_float_eq(number, -2345.0987);
ck_assert_int_eq(result, 0);

#test n_07
s21_decimal value =  {{0x00000001, 0x00000000, 0x00000000, 0x80000000}};
float result = 0;
float check = -1;
int return_value = s21_from_decimal_to_float(value, &result);
ck_assert_float_eq(result, check);
ck_assert_int_eq(return_value, 0);

#test n_08
s21_decimal value =   {{0x00002F0D, 0x00000000, 0x00000000, 0x80030000}};
float result = 0;
float check = -12.045;
int return_value = s21_from_decimal_to_float(value, &result);
ck_assert_float_eq(result, check);
ck_assert_int_eq(return_value, 0);

#test n_09
s21_decimal value =  {{0x00000001, 0x00000000, 0x00000000, 0x00140000}};
float result = 0;
float check = 0.00000000000000000001;
int return_value = s21_from_decimal_to_float(value, &result);
ck_assert_float_eq(result, check);
ck_assert_int_eq(return_value, 0);

#test n_10
s21_decimal value =  {{0x51A337CD, 0x00000002, 0x00000000, 0x80040000}};
float result = 0;
float check = -995958.5741;
int return_value = s21_from_decimal_to_float(value, &result);
ck_assert_float_eq(result, check);
ck_assert_int_eq(return_value, 0);





